/**
 * This class is generated by jOOQ
 */
package gen.example.jooq;


import gen.example.jooq.tables.Actor;
import gen.example.jooq.tables.ActorInfo;
import gen.example.jooq.tables.Address;
import gen.example.jooq.tables.Category;
import gen.example.jooq.tables.City;
import gen.example.jooq.tables.Country;
import gen.example.jooq.tables.Customer;
import gen.example.jooq.tables.CustomerList;
import gen.example.jooq.tables.Film;
import gen.example.jooq.tables.FilmActor;
import gen.example.jooq.tables.FilmCategory;
import gen.example.jooq.tables.FilmList;
import gen.example.jooq.tables.FilmText;
import gen.example.jooq.tables.Inventory;
import gen.example.jooq.tables.Language;
import gen.example.jooq.tables.NicerButSlowerFilmList;
import gen.example.jooq.tables.Payment;
import gen.example.jooq.tables.Rental;
import gen.example.jooq.tables.SalesByFilmCategory;
import gen.example.jooq.tables.SalesByStore;
import gen.example.jooq.tables.Staff;
import gen.example.jooq.tables.StaffList;
import gen.example.jooq.tables.Store;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sakila extends SchemaImpl {

	private static final long serialVersionUID = -2005777192;

	/**
	 * The reference instance of <code>sakila</code>
	 */
	public static final Sakila sakila = new Sakila();

	/**
	 * No further instances allowed
	 */
	private Sakila() {
		super("sakila");
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(
			Actor.actor,
			ActorInfo.actorInfo,
			Address.address,
			Category.category,
			City.city,
			Country.country,
			Customer.customer,
			CustomerList.customerList,
			Film.film,
			FilmActor.filmActor,
			FilmCategory.filmCategory,
			FilmList.filmList,
			FilmText.filmText,
			Inventory.inventory,
			Language.language,
			NicerButSlowerFilmList.nicerButSlowerFilmList,
			Payment.payment,
			Rental.rental,
			SalesByFilmCategory.salesByFilmCategory,
			SalesByStore.salesByStore,
			Staff.staff,
			StaffList.staffList,
			Store.store);
	}
}
