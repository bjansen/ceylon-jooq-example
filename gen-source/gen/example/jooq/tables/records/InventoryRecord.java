/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables.records;


import gen.example.jooq.tables.Inventory;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InventoryRecord extends UpdatableRecordImpl<InventoryRecord> implements Record4<UInteger, UShort, UByte, Timestamp> {

	private static final long serialVersionUID = -2038045500;

	/**
	 * Setter for <code>sakila.inventory.inventory_id</code>.
	 */
	public void setInventoryId(UInteger value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sakila.inventory.inventory_id</code>.
	 */
	public UInteger getInventoryId() {
		return (UInteger) getValue(0);
	}

	/**
	 * Setter for <code>sakila.inventory.film_id</code>.
	 */
	public void setFilmId(UShort value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sakila.inventory.film_id</code>.
	 */
	public UShort getFilmId() {
		return (UShort) getValue(1);
	}

	/**
	 * Setter for <code>sakila.inventory.store_id</code>.
	 */
	public void setStoreId(UByte value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sakila.inventory.store_id</code>.
	 */
	public UByte getStoreId() {
		return (UByte) getValue(2);
	}

	/**
	 * Setter for <code>sakila.inventory.last_update</code>.
	 */
	public void setLastUpdate(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>sakila.inventory.last_update</code>.
	 */
	public Timestamp getLastUpdate() {
		return (Timestamp) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UInteger> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<UInteger, UShort, UByte, Timestamp> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<UInteger, UShort, UByte, Timestamp> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field1() {
		return Inventory.inventory.inventoryId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UShort> field2() {
		return Inventory.inventory.filmId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UByte> field3() {
		return Inventory.inventory.storeId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Inventory.inventory.lastUpdate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value1() {
		return getInventoryId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UShort value2() {
		return getFilmId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UByte value3() {
		return getStoreId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getLastUpdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InventoryRecord value1(UInteger value) {
		setInventoryId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InventoryRecord value2(UShort value) {
		setFilmId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InventoryRecord value3(UByte value) {
		setStoreId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InventoryRecord value4(Timestamp value) {
		setLastUpdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InventoryRecord values(UInteger value1, UShort value2, UByte value3, Timestamp value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached InventoryRecord
	 */
	public InventoryRecord() {
		super(Inventory.inventory);
	}

	/**
	 * Create a detached, initialised InventoryRecord
	 */
	public InventoryRecord(UInteger inventoryId, UShort filmId, UByte storeId, Timestamp lastUpdate) {
		super(Inventory.inventory);

		setValue(0, inventoryId);
		setValue(1, filmId);
		setValue(2, storeId);
		setValue(3, lastUpdate);
	}
}
