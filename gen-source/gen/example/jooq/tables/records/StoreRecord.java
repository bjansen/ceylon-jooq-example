/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables.records;


import gen.example.jooq.tables.Store;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreRecord extends UpdatableRecordImpl<StoreRecord> implements Record4<UByte, UByte, UShort, Timestamp> {

	private static final long serialVersionUID = 773513246;

	/**
	 * Setter for <code>sakila.store.store_id</code>.
	 */
	public void setStoreId(UByte value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sakila.store.store_id</code>.
	 */
	public UByte getStoreId() {
		return (UByte) getValue(0);
	}

	/**
	 * Setter for <code>sakila.store.manager_staff_id</code>.
	 */
	public void setManagerStaffId(UByte value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sakila.store.manager_staff_id</code>.
	 */
	public UByte getManagerStaffId() {
		return (UByte) getValue(1);
	}

	/**
	 * Setter for <code>sakila.store.address_id</code>.
	 */
	public void setAddressId(UShort value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sakila.store.address_id</code>.
	 */
	public UShort getAddressId() {
		return (UShort) getValue(2);
	}

	/**
	 * Setter for <code>sakila.store.last_update</code>.
	 */
	public void setLastUpdate(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>sakila.store.last_update</code>.
	 */
	public Timestamp getLastUpdate() {
		return (Timestamp) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UByte> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<UByte, UByte, UShort, Timestamp> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<UByte, UByte, UShort, Timestamp> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UByte> field1() {
		return Store.store.storeId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UByte> field2() {
		return Store.store.managerStaffId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UShort> field3() {
		return Store.store.addressId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Store.store.lastUpdate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UByte value1() {
		return getStoreId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UByte value2() {
		return getManagerStaffId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UShort value3() {
		return getAddressId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getLastUpdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord value1(UByte value) {
		setStoreId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord value2(UByte value) {
		setManagerStaffId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord value3(UShort value) {
		setAddressId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord value4(Timestamp value) {
		setLastUpdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StoreRecord values(UByte value1, UByte value2, UShort value3, Timestamp value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StoreRecord
	 */
	public StoreRecord() {
		super(Store.store);
	}

	/**
	 * Create a detached, initialised StoreRecord
	 */
	public StoreRecord(UByte storeId, UByte managerStaffId, UShort addressId, Timestamp lastUpdate) {
		super(Store.store);

		setValue(0, storeId);
		setValue(1, managerStaffId);
		setValue(2, addressId);
		setValue(3, lastUpdate);
	}
}
