/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables.records;


import gen.example.jooq.tables.FilmActor;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmActorRecord extends UpdatableRecordImpl<FilmActorRecord> implements Record3<UShort, UShort, Timestamp> {

	private static final long serialVersionUID = -593752241;

	/**
	 * Setter for <code>sakila.film_actor.actor_id</code>.
	 */
	public void setActorId(UShort value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sakila.film_actor.actor_id</code>.
	 */
	public UShort getActorId() {
		return (UShort) getValue(0);
	}

	/**
	 * Setter for <code>sakila.film_actor.film_id</code>.
	 */
	public void setFilmId(UShort value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sakila.film_actor.film_id</code>.
	 */
	public UShort getFilmId() {
		return (UShort) getValue(1);
	}

	/**
	 * Setter for <code>sakila.film_actor.last_update</code>.
	 */
	public void setLastUpdate(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sakila.film_actor.last_update</code>.
	 */
	public Timestamp getLastUpdate() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<UShort, UShort> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<UShort, UShort, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<UShort, UShort, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UShort> field1() {
		return FilmActor.filmActor.actorId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UShort> field2() {
		return FilmActor.filmActor.filmId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return FilmActor.filmActor.lastUpdate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UShort value1() {
		return getActorId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UShort value2() {
		return getFilmId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getLastUpdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmActorRecord value1(UShort value) {
		setActorId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmActorRecord value2(UShort value) {
		setFilmId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmActorRecord value3(Timestamp value) {
		setLastUpdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmActorRecord values(UShort value1, UShort value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FilmActorRecord
	 */
	public FilmActorRecord() {
		super(FilmActor.filmActor);
	}

	/**
	 * Create a detached, initialised FilmActorRecord
	 */
	public FilmActorRecord(UShort actorId, UShort filmId, Timestamp lastUpdate) {
		super(FilmActor.filmActor);

		setValue(0, actorId);
		setValue(1, filmId);
		setValue(2, lastUpdate);
	}
}
