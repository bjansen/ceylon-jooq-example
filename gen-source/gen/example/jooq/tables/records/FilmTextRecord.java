/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables.records;


import ceylon.language.String;

import gen.example.jooq.tables.FilmText;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmTextRecord extends UpdatableRecordImpl<FilmTextRecord> implements Record3<Short, String, java.lang.String> {

	private static final long serialVersionUID = 998716525;

	/**
	 * Setter for <code>sakila.film_text.film_id</code>.
	 */
	public void setFilmId(Short value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sakila.film_text.film_id</code>.
	 */
	public Short getFilmId() {
		return (Short) getValue(0);
	}

	/**
	 * Setter for <code>sakila.film_text.title</code>.
	 */
	public void setTitle(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sakila.film_text.title</code>.
	 */
	public String getTitle() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>sakila.film_text.description</code>.
	 */
	public void setDescription(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sakila.film_text.description</code>.
	 */
	public java.lang.String getDescription() {
		return (java.lang.String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Short> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Short, String, java.lang.String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Short, String, java.lang.String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field1() {
		return FilmText.filmText.filmId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return FilmText.filmText.title;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<java.lang.String> field3() {
		return FilmText.filmText.description;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value1() {
		return getFilmId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmTextRecord value1(Short value) {
		setFilmId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmTextRecord value2(String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmTextRecord value3(java.lang.String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmTextRecord values(Short value1, String value2, java.lang.String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FilmTextRecord
	 */
	public FilmTextRecord() {
		super(FilmText.filmText);
	}

	/**
	 * Create a detached, initialised FilmTextRecord
	 */
	public FilmTextRecord(Short filmId, String title, java.lang.String description) {
		super(FilmText.filmText);

		setValue(0, filmId);
		setValue(1, title);
		setValue(2, description);
	}
}
