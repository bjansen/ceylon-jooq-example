/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables.records;


import ceylon.language.String;

import gen.example.jooq.tables.Staff;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StaffRecord extends UpdatableRecordImpl<StaffRecord> implements Record11<UByte, String, String, UShort, byte[], String, UByte, Byte, String, String, Timestamp> {

	private static final long serialVersionUID = 1853708499;

	/**
	 * Setter for <code>sakila.staff.staff_id</code>.
	 */
	public void setStaffId(UByte value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sakila.staff.staff_id</code>.
	 */
	public UByte getStaffId() {
		return (UByte) getValue(0);
	}

	/**
	 * Setter for <code>sakila.staff.first_name</code>.
	 */
	public void setFirstName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sakila.staff.first_name</code>.
	 */
	public String getFirstName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>sakila.staff.last_name</code>.
	 */
	public void setLastName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sakila.staff.last_name</code>.
	 */
	public String getLastName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>sakila.staff.address_id</code>.
	 */
	public void setAddressId(UShort value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>sakila.staff.address_id</code>.
	 */
	public UShort getAddressId() {
		return (UShort) getValue(3);
	}

	/**
	 * Setter for <code>sakila.staff.picture</code>.
	 */
	public void setPicture(byte[] value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>sakila.staff.picture</code>.
	 */
	public byte[] getPicture() {
		return (byte[]) getValue(4);
	}

	/**
	 * Setter for <code>sakila.staff.email</code>.
	 */
	public void setEmail(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>sakila.staff.email</code>.
	 */
	public String getEmail() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>sakila.staff.store_id</code>.
	 */
	public void setStoreId(UByte value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>sakila.staff.store_id</code>.
	 */
	public UByte getStoreId() {
		return (UByte) getValue(6);
	}

	/**
	 * Setter for <code>sakila.staff.active</code>.
	 */
	public void setActive(Byte value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>sakila.staff.active</code>.
	 */
	public Byte getActive() {
		return (Byte) getValue(7);
	}

	/**
	 * Setter for <code>sakila.staff.username</code>.
	 */
	public void setUsername(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>sakila.staff.username</code>.
	 */
	public String getUsername() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>sakila.staff.password</code>.
	 */
	public void setPassword(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>sakila.staff.password</code>.
	 */
	public String getPassword() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>sakila.staff.last_update</code>.
	 */
	public void setLastUpdate(Timestamp value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>sakila.staff.last_update</code>.
	 */
	public Timestamp getLastUpdate() {
		return (Timestamp) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UByte> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<UByte, String, String, UShort, byte[], String, UByte, Byte, String, String, Timestamp> fieldsRow() {
		return (Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<UByte, String, String, UShort, byte[], String, UByte, Byte, String, String, Timestamp> valuesRow() {
		return (Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UByte> field1() {
		return Staff.staff.staffId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Staff.staff.firstName;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Staff.staff.lastName;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UShort> field4() {
		return Staff.staff.addressId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field5() {
		return Staff.staff.picture;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Staff.staff.email;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UByte> field7() {
		return Staff.staff.storeId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field8() {
		return Staff.staff.active;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Staff.staff.username;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return Staff.staff.password;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field11() {
		return Staff.staff.lastUpdate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UByte value1() {
		return getStaffId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFirstName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLastName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UShort value4() {
		return getAddressId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value5() {
		return getPicture();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UByte value7() {
		return getStoreId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value8() {
		return getActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value11() {
		return getLastUpdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value1(UByte value) {
		setStaffId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value2(String value) {
		setFirstName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value3(String value) {
		setLastName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value4(UShort value) {
		setAddressId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value5(byte[] value) {
		setPicture(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value6(String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value7(UByte value) {
		setStoreId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value8(Byte value) {
		setActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value9(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value10(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value11(Timestamp value) {
		setLastUpdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord values(UByte value1, String value2, String value3, UShort value4, byte[] value5, String value6, UByte value7, Byte value8, String value9, String value10, Timestamp value11) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StaffRecord
	 */
	public StaffRecord() {
		super(Staff.staff);
	}

	/**
	 * Create a detached, initialised StaffRecord
	 */
	public StaffRecord(UByte staffId, String firstName, String lastName, UShort addressId, byte[] picture, String email, UByte storeId, Byte active, String username, String password, Timestamp lastUpdate) {
		super(Staff.staff);

		setValue(0, staffId);
		setValue(1, firstName);
		setValue(2, lastName);
		setValue(3, addressId);
		setValue(4, picture);
		setValue(5, email);
		setValue(6, storeId);
		setValue(7, active);
		setValue(8, username);
		setValue(9, password);
		setValue(10, lastUpdate);
	}
}
