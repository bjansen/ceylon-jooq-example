/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables.records;


import ceylon.language.String;

import gen.example.jooq.tables.Customer;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record9<UShort, UByte, String, String, String, UShort, Byte, Timestamp, Timestamp> {

	private static final long serialVersionUID = 603781350;

	/**
	 * Setter for <code>sakila.customer.customer_id</code>.
	 */
	public void setCustomerId(UShort value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sakila.customer.customer_id</code>.
	 */
	public UShort getCustomerId() {
		return (UShort) getValue(0);
	}

	/**
	 * Setter for <code>sakila.customer.store_id</code>.
	 */
	public void setStoreId(UByte value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sakila.customer.store_id</code>.
	 */
	public UByte getStoreId() {
		return (UByte) getValue(1);
	}

	/**
	 * Setter for <code>sakila.customer.first_name</code>.
	 */
	public void setFirstName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sakila.customer.first_name</code>.
	 */
	public String getFirstName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>sakila.customer.last_name</code>.
	 */
	public void setLastName(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>sakila.customer.last_name</code>.
	 */
	public String getLastName() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>sakila.customer.email</code>.
	 */
	public void setEmail(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>sakila.customer.email</code>.
	 */
	public String getEmail() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>sakila.customer.address_id</code>.
	 */
	public void setAddressId(UShort value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>sakila.customer.address_id</code>.
	 */
	public UShort getAddressId() {
		return (UShort) getValue(5);
	}

	/**
	 * Setter for <code>sakila.customer.active</code>.
	 */
	public void setActive(Byte value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>sakila.customer.active</code>.
	 */
	public Byte getActive() {
		return (Byte) getValue(6);
	}

	/**
	 * Setter for <code>sakila.customer.create_date</code>.
	 */
	public void setCreateDate(Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>sakila.customer.create_date</code>.
	 */
	public Timestamp getCreateDate() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>sakila.customer.last_update</code>.
	 */
	public void setLastUpdate(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>sakila.customer.last_update</code>.
	 */
	public Timestamp getLastUpdate() {
		return (Timestamp) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UShort> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<UShort, UByte, String, String, String, UShort, Byte, Timestamp, Timestamp> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<UShort, UByte, String, String, String, UShort, Byte, Timestamp, Timestamp> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UShort> field1() {
		return Customer.customer.customerId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UByte> field2() {
		return Customer.customer.storeId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Customer.customer.firstName;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Customer.customer.lastName;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Customer.customer.email;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UShort> field6() {
		return Customer.customer.addressId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field7() {
		return Customer.customer.active;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return Customer.customer.createDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return Customer.customer.lastUpdate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UShort value1() {
		return getCustomerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UByte value2() {
		return getStoreId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getFirstName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getLastName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UShort value6() {
		return getAddressId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value7() {
		return getActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getCreateDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getLastUpdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value1(UShort value) {
		setCustomerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value2(UByte value) {
		setStoreId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value3(String value) {
		setFirstName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value4(String value) {
		setLastName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value5(String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value6(UShort value) {
		setAddressId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value7(Byte value) {
		setActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value8(Timestamp value) {
		setCreateDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord value9(Timestamp value) {
		setLastUpdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerRecord values(UShort value1, UByte value2, String value3, String value4, String value5, UShort value6, Byte value7, Timestamp value8, Timestamp value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CustomerRecord
	 */
	public CustomerRecord() {
		super(Customer.customer);
	}

	/**
	 * Create a detached, initialised CustomerRecord
	 */
	public CustomerRecord(UShort customerId, UByte storeId, String firstName, String lastName, String email, UShort addressId, Byte active, Timestamp createDate, Timestamp lastUpdate) {
		super(Customer.customer);

		setValue(0, customerId);
		setValue(1, storeId);
		setValue(2, firstName);
		setValue(3, lastName);
		setValue(4, email);
		setValue(5, addressId);
		setValue(6, active);
		setValue(7, createDate);
		setValue(8, lastUpdate);
	}
}
