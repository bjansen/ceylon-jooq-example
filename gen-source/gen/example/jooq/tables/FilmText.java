/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables;


import ceylon.language.String;

import example.jooqconverters.StringConverter;

import gen.example.jooq.Keys;
import gen.example.jooq.Sakila;
import gen.example.jooq.tables.records.FilmTextRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmText extends TableImpl<FilmTextRecord> {

	private static final long serialVersionUID = -647259913;

	/**
	 * The reference instance of <code>sakila.film_text</code>
	 */
	public static final FilmText filmText = new FilmText();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FilmTextRecord> getRecordType() {
		return FilmTextRecord.class;
	}

	/**
	 * The column <code>sakila.film_text.film_id</code>.
	 */
	public final TableField<FilmTextRecord, Short> filmId = createField("film_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>sakila.film_text.title</code>.
	 */
	public final TableField<FilmTextRecord, String> title = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "", new StringConverter());

	/**
	 * The column <code>sakila.film_text.description</code>.
	 */
	public final TableField<FilmTextRecord, java.lang.String> description = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>sakila.film_text</code> table reference
	 */
	public FilmText() {
		this("film_text", null);
	}

	/**
	 * Create an aliased <code>sakila.film_text</code> table reference
	 */
	public FilmText(java.lang.String alias) {
		this(alias, filmText);
	}

	private FilmText(java.lang.String alias, Table<FilmTextRecord> aliased) {
		this(alias, aliased, null);
	}

	private FilmText(java.lang.String alias, Table<FilmTextRecord> aliased, Field<?>[] parameters) {
		super(alias, Sakila.sakila, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FilmTextRecord> getPrimaryKey() {
		return Keys.keyFilmTextPrimary;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FilmTextRecord>> getKeys() {
		return Arrays.<UniqueKey<FilmTextRecord>>asList(Keys.keyFilmTextPrimary);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmText as(java.lang.String alias) {
		return new FilmText(alias, this);
	}

	/**
	 * Rename this table
	 */
	public FilmText rename(java.lang.String name) {
		return new FilmText(name, null);
	}
}
