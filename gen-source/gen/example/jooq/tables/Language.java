/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables;


import gen.example.jooq.Keys;
import gen.example.jooq.Sakila;
import gen.example.jooq.tables.records.LanguageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Language extends TableImpl<LanguageRecord> {

	private static final long serialVersionUID = -1958771694;

	/**
	 * The reference instance of <code>sakila.language</code>
	 */
	public static final Language language = new Language();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LanguageRecord> getRecordType() {
		return LanguageRecord.class;
	}

	/**
	 * The column <code>sakila.language.language_id</code>.
	 */
	public final TableField<LanguageRecord, UByte> languageId = createField("language_id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sakila.language.name</code>.
	 */
	public final TableField<LanguageRecord, String> name = createField("name", org.jooq.impl.SQLDataType.CHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>sakila.language.last_update</code>.
	 */
	public final TableField<LanguageRecord, Timestamp> lastUpdate = createField("last_update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>sakila.language</code> table reference
	 */
	public Language() {
		this("language", null);
	}

	/**
	 * Create an aliased <code>sakila.language</code> table reference
	 */
	public Language(String alias) {
		this(alias, language);
	}

	private Language(String alias, Table<LanguageRecord> aliased) {
		this(alias, aliased, null);
	}

	private Language(String alias, Table<LanguageRecord> aliased, Field<?>[] parameters) {
		super(alias, Sakila.sakila, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<LanguageRecord, UByte> getIdentity() {
		return Keys.IDENTITY_language;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LanguageRecord> getPrimaryKey() {
		return Keys.keyLanguagePrimary;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LanguageRecord>> getKeys() {
		return Arrays.<UniqueKey<LanguageRecord>>asList(Keys.keyLanguagePrimary);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Language as(String alias) {
		return new Language(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Language rename(String name) {
		return new Language(name, null);
	}
}
