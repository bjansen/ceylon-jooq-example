/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables;


import ceylon.language.String;

import com.github.bjansen.ceylon.jooqadapter.StringConverter;

import gen.example.jooq.Keys;
import gen.example.jooq.Sakila;
import gen.example.jooq.tables.records.CategoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Category extends TableImpl<CategoryRecord> {

	private static final long serialVersionUID = 2094568248;

	/**
	 * The reference instance of <code>sakila.category</code>
	 */
	public static final Category category = new Category();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CategoryRecord> getRecordType() {
		return CategoryRecord.class;
	}

	/**
	 * The column <code>sakila.category.category_id</code>.
	 */
	public final TableField<CategoryRecord, UByte> categoryId = createField("category_id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sakila.category.name</code>.
	 */
	public final TableField<CategoryRecord, String> name = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "", new StringConverter());

	/**
	 * The column <code>sakila.category.last_update</code>.
	 */
	public final TableField<CategoryRecord, Timestamp> lastUpdate = createField("last_update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>sakila.category</code> table reference
	 */
	public Category() {
		this("category", null);
	}

	/**
	 * Create an aliased <code>sakila.category</code> table reference
	 */
	public Category(java.lang.String alias) {
		this(alias, category);
	}

	private Category(java.lang.String alias, Table<CategoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private Category(java.lang.String alias, Table<CategoryRecord> aliased, Field<?>[] parameters) {
		super(alias, Sakila.sakila, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CategoryRecord, UByte> getIdentity() {
		return Keys.IDENTITY_category;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CategoryRecord> getPrimaryKey() {
		return Keys.keyCategoryPrimary;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CategoryRecord>> getKeys() {
		return Arrays.<UniqueKey<CategoryRecord>>asList(Keys.keyCategoryPrimary);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Category as(java.lang.String alias) {
		return new Category(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Category rename(java.lang.String name) {
		return new Category(name, null);
	}
}
