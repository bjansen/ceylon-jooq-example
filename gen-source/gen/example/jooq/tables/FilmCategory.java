/**
 * This class is generated by jOOQ
 */
package gen.example.jooq.tables;


import gen.example.jooq.Keys;
import gen.example.jooq.Sakila;
import gen.example.jooq.tables.records.FilmCategoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmCategory extends TableImpl<FilmCategoryRecord> {

	private static final long serialVersionUID = 905912295;

	/**
	 * The reference instance of <code>sakila.film_category</code>
	 */
	public static final FilmCategory filmCategory = new FilmCategory();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FilmCategoryRecord> getRecordType() {
		return FilmCategoryRecord.class;
	}

	/**
	 * The column <code>sakila.film_category.film_id</code>.
	 */
	public final TableField<FilmCategoryRecord, UShort> filmId = createField("film_id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sakila.film_category.category_id</code>.
	 */
	public final TableField<FilmCategoryRecord, UByte> categoryId = createField("category_id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sakila.film_category.last_update</code>.
	 */
	public final TableField<FilmCategoryRecord, Timestamp> lastUpdate = createField("last_update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>sakila.film_category</code> table reference
	 */
	public FilmCategory() {
		this("film_category", null);
	}

	/**
	 * Create an aliased <code>sakila.film_category</code> table reference
	 */
	public FilmCategory(String alias) {
		this(alias, filmCategory);
	}

	private FilmCategory(String alias, Table<FilmCategoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private FilmCategory(String alias, Table<FilmCategoryRecord> aliased, Field<?>[] parameters) {
		super(alias, Sakila.sakila, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FilmCategoryRecord> getPrimaryKey() {
		return Keys.keyFilmCategoryPrimary;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FilmCategoryRecord>> getKeys() {
		return Arrays.<UniqueKey<FilmCategoryRecord>>asList(Keys.keyFilmCategoryPrimary);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<FilmCategoryRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<FilmCategoryRecord, ?>>asList(Keys.fkFilmCategoryFilm, Keys.fkFilmCategoryCategory);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FilmCategory as(String alias) {
		return new FilmCategory(alias, this);
	}

	/**
	 * Rename this table
	 */
	public FilmCategory rename(String name) {
		return new FilmCategory(name, null);
	}
}
